library(reticulate)
reticulate::repl_python()
import pandas                   as pd
import statsmodels.api          as sm
import pingouin                 as pg
import matplotlib.pyplot        as plt
import mpl_axes_aligner
from statsmodels.formula.api    import ols
from sklearn.preprocessing      import StandardScaler
from sklearn.decomposition      import PCA
DfPlayerNBA             = pd.read_excel("BBDD_Player.xlsx")
DfPlayerNBA             = DfPlayerNBA.loc[(DfPlayerNBA["GP"]>=max(DfPlayerNBA["GP"])/2) & (DfPlayerNBA["MIN"]/DfPlayerNBA["GP"]>=8),]
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])], labels=['Young Player', 'Mid-Age Player', 'Veteran Player'])
DfPlayerNBA             = pd.read_excel("BBDD_Player.xlsx")
DfPlayerNBA             = DfPlayerNBA.loc[(DfPlayerNBA["GP"]>=max(DfPlayerNBA["GP"])/2) & (DfPlayerNBA["MIN"]/DfPlayerNBA["GP"]>=8),]
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])], labels=['Young Player', 'Mid-Age Player', 'Veteran Player'])
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])], labels=['Young Player', 'Mid-Age Player', 'Veteran Player'])
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])])
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])])
View(DfPlayerNBA)
View(DfPlayerNBA)
View(DfPlayerNBA)
DfPlayerNBA             = pd.read_excel("BBDD_Player.xlsx")
DfPlayerNBA             = DfPlayerNBA.loc[(DfPlayerNBA["GP"]>=max(DfPlayerNBA["GP"])/2) & (DfPlayerNBA["MIN"]/DfPlayerNBA["GP"]>=8),]
DfPlayerNBA["Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])])
DfPlayerNBA.loc[:,"Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])], labels=['Young Player', 'Mid-Age Player', 'Veteran Player'])
DfPlayerNBA             = pd.read_excel("BBDD_Player.xlsx")
DfPlayerNBA             = pd.read_excel("BBDD_Player.xlsx")
DfPlayerNBA = DfPlayerNBA.copy()
DfPlayerNBA             = DfPlayerNBA.loc[(DfPlayerNBA["GP"]>=max(DfPlayerNBA["GP"])/2) & (DfPlayerNBA["MIN"]/DfPlayerNBA["GP"]>=8),]
DfPlayerNBA.loc[:,"Age_Group"] = pd.cut(DfPlayerNBA['Age'], bins=[min(DfPlayerNBA['Age']), 25, 30, max(DfPlayerNBA['Age'])], labels=['Young Player', 'Mid-Age Player', 'Veteran Player'])
quit
library(reticulate)
setwd("C:/Users/jochoa/Desktop/Ejemplo/An-lisis-Multivariante-NBA")
library(readxl)
Df_Player <- read_excel("BBDD_Player.xlsx")
Df_Player <- Df_Player %>%
mutate(Age_Group = cut(Age,
breaks = c(min(Df_Player$Age), 25, 30, max(Df_Player$Age)),
labels =  c("Young Player", "Mid-Age Player", "Veteran Player"),
include.lowest = TRUE))
library(tidyverse)
Df_Player <- Df_Player %>%
mutate(Age_Group = cut(Age,
breaks = c(min(Df_Player$Age), 25, 30, max(Df_Player$Age)),
labels =  c("Young Player", "Mid-Age Player", "Veteran Player"),
include.lowest = TRUE))
library(knitr)
summary_stats_pie <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = count(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
summary_stats_pie <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie, digits = 2)
summary_stats_pie <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie, digits = 2, caption = "Estadísticas descriptivas PIE dada la posición del jugador")
library(reticulate)
library(readxl)
library(tidyverse)
library(knitr)
Df_Player <- read_excel("BBDD_Player.xlsx")
# Filtrado dado las condiciones del trabajo
Df_Player <- Df_Player %>% filter(GP >= max(GP)/2 & MIN/GP >= 8)
# Crear la nueva variable Age_Group
Df_Player <- Df_Player %>%
mutate(Age_Group = cut(Age,
breaks = c(min(Df_Player$Age), 25, 30, max(Df_Player$Age)),
labels =  c("Young Player", "Mid-Age Player", "Veteran Player"),
include.lowest = TRUE))
summary_stats_pie <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie, digits = 2, caption = "Estadísticas descriptivas PIE dada la posición del jugador")
boxplot_pie <- ggplot(dfPlayerNBA, aes(x = Position, y = PIE)) +
geom_boxplot(fill = "lightblue", color = "blue") +
labs(
title = "Distribución del PIE por posición del jugador",
x = "Posición del Jugador",
y = "PIE"
) +
theme_classic()
boxplot_pie <- ggplot(Df_Player, aes(x = Position, y = PIE)) +
geom_boxplot(fill = "lightblue", color = "blue") +
labs(
title = "Distribución del PIE por posición del jugador",
x = "Posición del Jugador",
y = "PIE"
) +
theme_classic()
boxplot_pie
boxplot_pie <- ggplot(Df_Player, aes(x = Position, y = PIE)) +
geom_boxplot(fill = "lightblue", color = "blue") +
labs(
title = "",
x = "Posición del Jugador",
y = "PIE"
) +
theme_classic()
boxplot_pie
boxplot_pie <- ggplot(Df_Player, aes(x = Position, y = PIE)) +
geom_boxplot(color = "darkblue") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(
title = "",
x = "Posición del Jugador",
y = "PIE"
) +
theme_classic()
boxplot_pie
boxplot_pie <- ggplot(Df_Player, aes(x = Position, y = PIE)) +
geom_boxplot(color = "darkblue") +
labs(
title = "",
x = "Posición del Jugador",
y = "PIE"
) +
theme_classic()
boxplot_pie
# Estadisticas descriptivas PIE por posicion
summary_stats_pie_age <- Df_Player %>%
group_by(Age_Group) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie_age, digits = 2)
boxplot_pie_age <- ggplot(Df_Player, aes(x = Age_Group, y = PIE)) +
geom_boxplot(color = "darkblue") +
labs(
title = "",
x = "",
y = "PIE"
) +
theme_classic()
boxplot_pie_age
# Estadisticas descriptivas PIE por posicion
summary_stats_pie_age <- Df_Player %>%
group_by(Age_Group) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie_age, digits = 2)
summary_stats_pie_age_position <- Df_Player %>%
group_by(Age_Group, Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75)
)
kable(summary_stats_pie_age_position, digits = 2)
summary_stats_pie_age_position <- Df_Player %>%
group_by(Age_Group, Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75),
.groups = 'drop'
)
kable(summary_stats_pie_age_position, digits = 2)
summary_stats_pie_age_position <- Df_Player %>%
group_by(Age_Group, Position) %>%
summarise(
N          = n(),
Media      = mean(PIE),
D.Estándar = sd(PIE),
Min        = min(PIE),
Max        = max(PIE),
Q1         = quantile(PIE, 0.25),
Mediana    = median(PIE),
Q3         = quantile(PIE, 0.75),
.groups = 'drop'
)
kable(summary_stats_pie_age_position, digits = 2)
# Estadisticas descriptivas PIE por posicion
summary_stats_usg <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75)
)
kable(summary_stats_usg, digits = 2)
# Estadisticas descriptivas PIE por posicion
summary_stats_usg <- Df_Player %>%
group_by(Position) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75)
)
kable(summary_stats_usg, digits = 2)
boxplot_usg_age <- ggplot(Df_Player, aes(x = Position, y = `USG%`)) +
geom_boxplot(color = "darkblue") +
labs(
title = "",
x = "",
y = "USG%"
) +
theme_classic()
boxplot_usg_age
boxplot_usg_age <- ggplot(Df_Player, aes(x = Position, y = `USG%`)) +
geom_boxplot(color = "darkblue") +
labs(
title = "",
x = "",
y = "USG%"
) +
theme_classic()
boxplot_usg_age
# Estadisticas descriptivas USG% por edad
summary_stats_usg_age <- Df_Player %>%
group_by(Age_Group) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75)
)
kable(summary_stats_usg_age, digits = 2)
# Estadisticas descriptivas USG% por edad
summary_stats_usg_age <- Df_Player %>%
group_by(Age_Group) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75)
)
kable(summary_stats_usg_age, digits = 2)
boxplot_usg_age <- ggplot(Df_Player, aes(x = Age_Group, y = `USG%`)) +
geom_boxplot(color = "darkblue") +
labs(
title = "",
x = "",
y = "USG%"
) +
theme_classic()
boxplot_usg_age
# Estadisticas descriptivas USG% por edad y posicion
summary_stats_usg_age_position <- Df_Player %>%
group_by(Age_Group, Position) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75),
.groups = 'drop'
)
kable(summary_stats_usg_age_position, digits = 2)
# Estadisticas descriptivas USG% por edad y posicion
summary_stats_usg_age_position <- Df_Player %>%
group_by(Age_Group, Position) %>%
summarise(
N          = n(),
Media      = mean(`USG%`),
D.Estándar = sd(`USG%`),
Min        = min(`USG%`),
Max        = max(`USG%`),
Q1         = quantile(`USG%`, 0.25),
Mediana    = median(`USG%`),
Q3         = quantile(`USG%`, 0.75),
.groups = 'drop'
)
kable(summary_stats_usg_age_position, digits = 2)
install.packages("MVN")
library(MVN)
Df_Player_Manova <- Df_Player %>% select(Player, Age, Age_Group, Position, `USG%`)
mvn(Df_Player_Manova[,4:], mvnTest = "royston")
mvn(Df_Player_Manova[,4:5], mvnTest = "royston")
Df_Player_Manova <- Df_Player %>% select(Player, Age, Age_Group, Position, PIE, `USG%`)
mvn(Df_Player_Manova[,5:6], mvnTest = "royston")
mvn(Df_Player_Manova[,5:6], mvnTest = "hz")
library(readxl)
library(tidyverse)
install.packages("readr")
library(readxl)
library(tidyverse)
install.packages("timechange")
library(readxl)
library(tidyverse)
library(knitr)
Df_Player <- read_excel("BBDD_Player.xlsx")
# Filtrado dado las condiciones del trabajo
Df_Player <- Df_Player %>% filter(GP >= max(GP)/2 & MIN/GP >= 8)
# Crear la nueva variable Age_Group
Df_Player <- Df_Player %>%
mutate(Age_Group = cut(Age,
breaks = c(min(Df_Player$Age), 25, 30, max(Df_Player$Age)),
labels =  c("Young Player", "Mid-Age Player", "Veteran Player"),
include.lowest = TRUE))
# Convertir Position y Age_Group a factores
Df_Player$Position  <- as.factor(Df_Player$Position)
Df_Player$Age_Group <- as.factor(Df_Player$Age_Group)
# Crear un modelo MANOVA
manova_model <- manova(cbind(PIE, USG) ~ Position * Age_Group, data = Df_Player)
# Convertir Position y Age_Group a factores
Df_Player$Position  <- as.factor(Df_Player$Position)
Df_Player$Age_Group <- as.factor(Df_Player$Age_Group)
# Crear un modelo MANOVA
manova_model <- manova(cbind(PIE, `USG%`) ~ Position * Age_Group, data = Df_Player)
summary(manova_model)
# Convertir Position y Age_Group a factores
Df_Player$Position  <- as.factor(Df_Player$Position)
Df_Player$Age_Group <- as.factor(Df_Player$Age_Group)
# Crear un modelo MANOVA
manova_model <- manova(cbind(PIE, `USG%`) ~ Position * Age_Group, data = Df_Player)
kable(summary(manova_model))
# Convertir Position y Age_Group a factores
Df_Player$Position  <- as.factor(Df_Player$Position)
Df_Player$Age_Group <- as.factor(Df_Player$Age_Group)
# Crear un modelo MANOVA
manova_model <- manova(cbind(PIE, `USG%`) ~ Position * Age_Group, data = Df_Player)
summary(manova_model)$stats
# Convertir Position y Age_Group a factores
Df_Player$Position  <- as.factor(Df_Player$Position)
Df_Player$Age_Group <- as.factor(Df_Player$Age_Group)
# Crear un modelo MANOVA
manova_model <- manova(cbind(PIE, `USG%`) ~ Position * Age_Group, data = Df_Player)
kable(summary(manova_model)$stats, digits = 2)
